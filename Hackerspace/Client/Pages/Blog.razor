@page "/blog"
@inject HttpClient http;
@inject NavigationManager NavManager

<h3>Blog</h3>
@if(posts == null)
{
    <p>Loading...</p>
}
else
{
    @foreach(var post in posts)
    {
        <p>@post.Title</p>
    }
    <button type="button" class="btn btn-primary" @onclick="OnNextPageClickAsync">Next Page</button>
    <button type="button" class="btn btn-primary" @onclick="OnPreviousPageClickAsync">Previous Page</button>
    <button type="button" class="btn btn-primary" @onclick="OnAddPostClick" >Add Post</button>
}


@code {
    private List<Post>? posts;
    private int page = 1;

    protected override async Task OnInitializedAsync()
    {       
        await base.OnInitializedAsync();
        posts = await http.GetFromJsonAsync<List<Post>>($"api/Posts/{page}/10");
    }

    protected async Task OnNextPageClickAsync()
    {
        var nextPagePosts = await http.GetFromJsonAsync<List<Post>>($"api/Posts/{page+1}/10");

        //Only update the page if we got something back
        if (nextPagePosts?.Count() > 0)
        {
            posts = nextPagePosts;
            page++;
        }
    }

    protected async Task OnPreviousPageClickAsync()
    {
        if(page > 1) //Don't decrement if we are at the start
        {            
            posts = await http.GetFromJsonAsync<List<Post>>($"api/Posts/{--page}/10");
        }
    }

    protected void OnAddPostClick()
    {
        //Navigate to a detail page
        NavManager.NavigateTo("post");
    }
}
