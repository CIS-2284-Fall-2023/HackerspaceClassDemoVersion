@page "/chat"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@implements IAsyncDisposable

<PageTitle>Chat</PageTitle>

<h3>Chat</h3>

<div class="form-group">
    <label>User: 
        <input @bind="userInput" />
    </label>
</div>

<div class="form-group">
    <label>Message
        <input @bind="messageInput" />
    </label>
</div>
<button @onclick="Send" disabled="@(!IsConnected)">Send</button>
<hr>
<ul id="messageslist">
    @foreach (var message in messages)
    {
        <li>@message</li>
    }
</ul>
@code {
    private HubConnection? hubConnection;
    private List<string> messages = new List<string>();
    private string? userInput;
    private string? messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder().WithUrl(NavigationManager.ToAbsoluteUri("/chatHub")).Build();

        //Subscribe to hub events
        hubConnection.On<string, string>("ReceiveMessage", OnMessageReceived);

        await hubConnection.StartAsync();
    }

    public void OnMessageReceived(string user,string message)
    {
        var encodedMsg = $"{user}: {message}";
        messages.Add(encodedMsg);
        StateHasChanged();
    }

    public async Task Send()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("SendMessage", userInput, messageInput);
        }
    }

    public bool IsConnected => hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if(hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}
